plugins {
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.12-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
	id("io.freefair.lombok") version "8.6"
	id "io.sentry.jvm.gradle" version "4.13.0"
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

application {
	mainClass = 'hexlet.code.AppApplication'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'

	implementation 'net.datafaker:datafaker:2.0.2'
	implementation 'org.instancio:instancio-junit:3.3.1'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'

	testImplementation(platform 'org.junit:junit-bom:5.10.0')
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:3.2.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.jsoup:jsoup:1.18.1'
	testImplementation 'org.assertj:assertj-core:3.25.3'

	runtimeOnly 'com.h2database:h2:2.2.224'
	implementation 'com.h2database:h2:2.2.224'
	implementation 'com.zaxxer:HikariCP:5.1.0'
	implementation 'org.postgresql:postgresql:42.7.2'

//	implementation 'io.sentry:sentry-spring-boot-starter:7.18.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
	testLogging {
		//exceptionFormat = TestExceptionFormat.FULL
		//events = mutableSetOf(TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED)
		exceptionFormat "full"
		events "failed"
		//showStandardStreams = true
	}
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required.set(true)
	}
}

sentry {
	// Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
	// This enables source context, allowing you to see your source
	// code as part of your stack traces in Sentry.
	includeSourceContext = true

	org = "home-fa3"
	projectName = "java-spring-boot"
	authToken = System.getenv("SENTRY_AUTH_TOKEN")
}

tasks.sentryBundleSourcesJava {
	enabled = System.getenv("SENTRY_AUTH_TOKEN") != null
}
